{"meta":{"title":"疏夜星稀","subtitle":"luxuncang's blog","description":"","author":"ShengXin Lu","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"Lupro","slug":"lupro","date":"2021-07-13T16:00:00.000Z","updated":"2021-07-14T04:48:57.450Z","comments":true,"path":"2021/07/14/lupro/","link":"","permalink":"http://example.com/2021/07/14/lupro/","excerpt":"","text":"lupro 爬虫框架lupro是一个完全兼容requests的异步爬虫框架 安装 Lupro使用 PyPi 安装 Lupro pip Find, install and publish Python packages with the Python Package Index pip install lupro 开始使用 导入 from lupro import lupro 兼容requests1from lupro import lupro as requests 这样即可不用修改代码完全替换 requests 原生lupro123from lupro import lupror = lupro.get(&#x27;https://www.python.org&#x27;)r.status_code 批量异步任务12345678910111213from lupro import lupro,lupros,generator,Batchsubmission# 请求列表url = [&#x27;https://www.python.org&#x27;,&#x27;https://www.baidu.com&#x27;]# 实例化模板r = lupro(&#x27;test&#x27;,lupros.get(&#x27;&#x27;))# lupro 生成器lu = generator(r, url)# 批量任务Batchsubmission(lu) 特性 完全继承requests 异步特性 lupro生成器 自动编码修正 解析器与解析链 选择器与选择链 下载器 请求头生成器 交互式 微服务 api 文档完善中","categories":[{"name":"开源项目","slug":"开源项目","permalink":"http://example.com/categories/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"}],"tags":[{"name":"python","slug":"python","permalink":"http://example.com/tags/python/"},{"name":"爬虫框架","slug":"爬虫框架","permalink":"http://example.com/tags/%E7%88%AC%E8%99%AB%E6%A1%86%E6%9E%B6/"}]},{"title":"Dtanys","slug":"dtanys","date":"2021-07-13T16:00:00.000Z","updated":"2021-07-14T04:32:40.536Z","comments":true,"path":"2021/07/14/dtanys/","link":"","permalink":"http://example.com/2021/07/14/dtanys/","excerpt":"","text":"Dtanysdtanys是一个python字典解析器，让人专注于非数据处理的代码构造中，dtanys使用xpath式语法 安装 Dtanys使用 PyPi 安装 Dtanys pip Find, install and publish Python packages with the Python Package Index pip install dtanys 开始使用 导入 from dtanys import XDict 使用场景123456test = &#123; &#x27;a&#x27;:&quot;这是一个测试的字典！&quot;, &#x27;b&#x27;:[&#x27;python&#x27;,&#x27;java&#x27;,&#x27;C&#x27;,&#x27;C++&#x27;,&#x27;go&#x27;], &#x27;c&#x27;:[&#123;&#x27;normal&#x27;:1&#125;,&#123;&#x27;abnormal&#x27;:0&#125;,&#123;&#x27;normal&#x27;:1&#125;], &#x27;d&#x27;:&#123;&#x27;html&#x27;:&#123;&#x27;content&#x27;:[&#x27;css&#x27;,&#x27;js&#x27;]&#125;&#125;&#125; 使用路径方式快速定位字典值 /d/html/content[0] 等价于 test[&#39;d&#39;][&#39;html&#39;][&#39;content&#39;][0] 使用 , 选择多个列表值 /b[0,3] 等价于 test[&#39;d&#39;][&#39;b&#39;][0] 和 test[&#39;d&#39;][&#39;b&#39;][3] 使用 [start:end:step] 选择多个列表值,完全支持切片操作 /b[0:2:1] 等价于 test[&#39;d&#39;][0:2:1] 使用 , 选择多个键值 /[&#39;a&#39;,&#39;b&#39;] 等价于 test[&#39;a&#39;] 和 test[&#39;b&#39;] 使用 // 选择所有键值 /c//normal 等价于 test[&#39;c&#39;][0][&#39;normal&#39;] 和 test[&#39;c&#39;][2][&#39;normal&#39;] 使用 * 进行泛解析 /*normal 等价于 test[&#39;c&#39;][0][&#39;normal&#39;] 和 test[&#39;c&#39;][2][&#39;normal&#39;] example.py 模板12345678910111213141516171819## 获取一个网易云歌单json数据import jsonimport requestsfrom dtanys import XDicturl = &quot;http://music.163.com/api/playlist/detail?id=475934383&quot;headers = &#123; &#x27;User-Agent&#x27;:&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11&quot;, &#125;res = requests.get(url=url,headers=headers).json()## 打印 jsonprint(json.dumps(res, sort_keys=True, indent=4,ensure_ascii=False))## 获取 歌单所有歌名print(XDict(res,&#x27;/result/tracks//name&#x27;).edict()) 更多案例请参考example文件 文档XDict语法 表达式 描述 / 从根节点选取 // 从匹配选择的当前节点选择字典中的节点，而不考虑它们的位置 [ any ] 当any为带引号的键时，选取当前对象的键值；否则即为切片或索引 [ ,… ] 要选择多个无规律的索引时，即可使用此方法，可重复选择 * 匹配任何元素节点 XX 从当前节点的键值选取键值为”XX”的值 *XX 从当前节点的键值选取所有键值为”XX”的值 ps : 第一次写 github 项目，如有问题或建议请提Issues或Insight","categories":[{"name":"开源项目","slug":"开源项目","permalink":"http://example.com/categories/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"}],"tags":[{"name":"python","slug":"python","permalink":"http://example.com/tags/python/"},{"name":"解析器","slug":"解析器","permalink":"http://example.com/tags/%E8%A7%A3%E6%9E%90%E5%99%A8/"}]}],"categories":[{"name":"开源项目","slug":"开源项目","permalink":"http://example.com/categories/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"}],"tags":[{"name":"python","slug":"python","permalink":"http://example.com/tags/python/"},{"name":"爬虫框架","slug":"爬虫框架","permalink":"http://example.com/tags/%E7%88%AC%E8%99%AB%E6%A1%86%E6%9E%B6/"},{"name":"解析器","slug":"解析器","permalink":"http://example.com/tags/%E8%A7%A3%E6%9E%90%E5%99%A8/"}]}