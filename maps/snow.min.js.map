{"version":3,"sources":["snow.js"],"names":["notMobile","snowConf","flakeCount","minDist","color","size","speed","opacity","stepsize","requestAnimationFrame","window","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","canvas","document","getElementById","ctx","getContext","mX","mY","flakes","width","innerWidth","height","innerHeight","snow","clearRect","i","flake","x","y","x2","y2","dist","Math","sqrt","xcomp","ycomp","deltaV","velX","velY","cos","step","stepSize","fillStyle","reset","beginPath","arc","PI","fill","floor","random","addEventListener","e","clientX","clientY","push","angle","init"],"mappings":"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","file":"../js/snow.min.js","sourcesContent":["// 移动端默认关闭\nnotMobile && (()=>{\n    let snowConf = {};\n    //-------------------参数设置区 开始-------------------\n        snowConf.flakeCount = 100;\n        snowConf.minDist = 150;\n        snowConf.color = \"255, 255, 255\";\n        snowConf.size = 2;\n        snowConf.speed = 0.5;\n        snowConf.opacity = 0.2;\n        snowConf.stepsize = .5;\n    //-------------------参数设置区 结束-------------------\n    const requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || function(callback){window.setTimeout(callback, 1000/60);};\n    window.requestAnimationFrame = requestAnimationFrame;\n    const canvas = document.getElementById(\"snow\");\n    const ctx = canvas.getContext(\"2d\");\n    const flakeCount = snowConf.flakeCount;\n    let mX = -100, mY = -100;\n    let flakes = [];\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    const snow = ()=>{\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        const minDist = snowConf.minDist;\n        for (let i = 0; i < flakeCount; i++){\n            let flake = flakes[i];\n            const x = mX, y = mY;\n            const x2 = flake.x, y2 = flake.y;\n            const dist = Math.sqrt((x - x2)*(x - x2) + (y - y2)*(y - y2));\n            if (dist < minDist) {\n                const force  = minDist / (dist*dist);\n                const xcomp  = (x - x2) / dist;\n                const ycomp  = (y - y2) / dist;\n                const deltaV = force / 2;\n                flake.velX -= deltaV * xcomp;\n                flake.velY -= deltaV * ycomp;\n             } else {\n                flake.velX *= 0.98;\n                if (flake.velY < flake.speed && (flake.speed - flake.velY > .01)) {\n                    flake.velY += (flake.speed - flake.velY) * .01;\n                }\n                flake.velX += Math.cos(flake.step += .05) * flake.stepSize;\n            }\n            ctx.fillStyle = \"rgba(\" + snowConf.color + \", \" + flake.opacity + \")\";\n            flake.y += flake.velY;\n            flake.x += flake.velX;\n            if(flake.y >= canvas.height || flake.y <= 0){\n                reset(flake);\n            }\n            if(flake.x >= canvas.width || flake.x <= 0){\n                reset(flake);\n            }\n            ctx.beginPath();\n            ctx.arc(flake.x, flake.y, flake.size, 0, Math.PI*2);\n            ctx.fill();\n        }\n        requestAnimationFrame(snow);\n    };\n    const reset = (flake)=>{\n        flake.x       = Math.floor(Math.random()*canvas.width);\n        flake.y       = 0;\n        flake.size    = (Math.random()*3)+2;\n        flake.speed   = (Math.random()*1)+0.5;\n        flake.velY    = flake.speed;\n        flake.velX    = 0;\n        flake.opacity = (Math.random()*0.5)+0.3;\n    };\n    const init = ()=>{\n        for(let i = 0; i < flakeCount; i++){\n            const x       = Math.floor(Math.random()*canvas.width);\n            const y       = Math.floor(Math.random()*canvas.height);\n            const size    = (Math.random()*3) + snowConf.size;\n            const speed   = (Math.random()*1) + snowConf.speed;\n            const opacity = (Math.random()*0.5) + snowConf.opacity;\n            flakes.push({\n                speed: speed,\n                velX: 0, velY: speed,\n                x: x, y: y,\n                size: size,\n                stepSize: (Math.random()) / 30 * snowConf.stepsize,\n                step: 0,\n                angle: 180,\n                opacity: opacity\n            });\n        }\n        snow();\n    };\n    document.addEventListener(\"mousemove\", (e)=>{mX = e.clientX, mY = e.clientY});\n    window.addEventListener(\"resize\",()=>{canvas.width = window.innerWidth; canvas.height = window.innerHeight;});\n    init();\n})();"]}